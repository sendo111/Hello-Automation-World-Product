version: 2.0
jobs:
  exec-app-test:
    machine:
      # Ubuntu v14.04
      # https://circleci.com/docs/ja/2.0/configuration-reference/
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: docker-compose up
          command: docker-compose up -d
      - run:
          name: sleep for launch db to migrate at Django
          command: sleep 10
      - run:
          name: execute django makemigrations
          command: docker-compose run haw ./manage.py makemigrations
      - run:
          name: execute django migrate
          command: docker-compose run haw ./manage.py migrate
      # - run:
      #     name: db user grant all privileges
      #     command: |
      #       docker exec mysql bash
      #       mysql -uroot -pXv8eFwmD
      #       GRANT ALL PRIVILEGES ON test_app.* TO 'user'@'%';
      #       flush privileges;
      #       exit;
      # - run:
      #     name: execute django unittest
      #     command: docker-compose run haw ./manage.py test
      - run:
          name: execute django flake8
          command: docker-compose run haw flake8 ./
      - run:
          name: docker-compose down
          command: docker-compose down

  exec-ansible:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      # コミットログで直近にansibleファイルの更新があれば実行、無ければスキップする処理を書く
      - run:
          name: check for ansiblefile update
          command: sleep 1
      # TODO: ansible用の機密性の高いファイルの作成処理を書く？
      - run:
          name: create file required for playbook exec
          command: sleep 1
      # TODO: playbookの実行処理を記載
      - run:
          name: execute ansible playbook
          command: sleep 1

  exec-deploy:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: authorize-security-group-ingress
          command: sh .circleci/authorize-security-group-ingress.sh
      - add_ssh_keys:
          fingerprints:
            - "af:4b:db:58:fe:72:9e:8a:b2:8b:e1:d6:b3:83:34:44"
      # TODO: docker-compose.ymlを準備して動作チェック(動けばdocker-compose downを実施)
      - run:
          name: check docker-compose running process
          command: |
            if [[ `ls | grep docker-compose.yml` && `docker-compose ps -q | wc -l` > 0 ]] ; then
              docker-compose down
            fi
      # TODO: デプロイ処理を記載(GitHubから資材を取得しpip installなどを実行)
      - run:
          name: deploy
          command: ssh -oStrictHostKeyChecking=no ${USER_NAME}@${HOST_NAME} "hostname"
      # TODO: コメントアウト外す
      - run:
          name: docker-compose up
          command: sleep 1
          # command: docker-compose up -d
      - run:
          name: revoke-security-group-ingress
          command: sh .circleci/revoke-security-group-ingress.sh

workflows:
  version: 2
  haw-deploy-exec:
    jobs:
      - exec-app-test
      - exec-ansible:
          requires:
            - exec-app-test
      - exec-deploy:
          requires:
            - exec-ansible
          filters:
            branches:
              # TODO: 検証用に作業ブランチを指定しているが、完成時にmasterに置き換える
              only: feature/HAW-42
